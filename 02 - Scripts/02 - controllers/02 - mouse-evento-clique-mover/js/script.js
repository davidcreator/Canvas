// ===== VARI√ÅVEIS GLOBAIS =====
let meuQuadrado;    // Vari√°vel que vai armazenar nosso quadrado
let areaDoJogo;     // Vari√°vel que vai controlar a √°rea do jogo

// ===== CONFIGURA√á√ïES DO JOGO =====
const LARGURA_CANVAS = 480;     // Largura da √°rea do jogo
const ALTURA_CANVAS = 270;      // Altura da √°rea do jogo
const VELOCIDADE = 2;           // Velocidade do movimento (pixels por frame)
const FPS = 50;                 // Frames por segundo (quantas vezes redesenha por segundo)

// ===== CLASSE PARA CRIAR O QUADRADO =====
function QuadradoJogavel(largura, altura, cor, posicaoX, posicaoY) {
    // Propriedades do quadrado
    this.largura = largura;
    this.altura = altura;
    this.cor = cor;
    this.x = posicaoX;              // Posi√ß√£o horizontal
    this.y = posicaoY;              // Posi√ß√£o vertical
    this.velocidadeX = 0;           // Velocidade horizontal (0 = parado)
    this.velocidadeY = 0;           // Velocidade vertical (0 = parado)

    // M√©todo para desenhar o quadrado na tela
    this.desenhar = function() {
        const contexto = areaDoJogo.canvas.getContext("2d");
        contexto.fillStyle = this.cor;
        contexto.fillRect(this.x, this.y, this.largura, this.altura);
    };

    // M√©todo para calcular a nova posi√ß√£o do quadrado
    this.mover = function() {
        // Atualiza a posi√ß√£o baseada na velocidade
        this.x += this.velocidadeX;
        this.y += this.velocidadeY;

        // Impede que o quadrado saia da tela (colis√£o com as bordas)
        if (this.x < 0) this.x = 0;  // Borda esquerda
        if (this.x > LARGURA_CANVAS - this.largura) {
            this.x = LARGURA_CANVAS - this.largura;  // Borda direita
        }
        if (this.y < 0) this.y = 0;  // Borda superior
        if (this.y > ALTURA_CANVAS - this.altura) {
            this.y = ALTURA_CANVAS - this.altura;  // Borda inferior
        }

        // Atualiza o placar na tela
        document.getElementById('posX').textContent = Math.round(this.x);
        document.getElementById('posY').textContent = Math.round(this.y);
    };
}

// ===== OBJETO QUE CONTROLA A √ÅREA DO JOGO =====
areaDoJogo = {
    canvas: null,           // Refer√™ncia para o elemento canvas
    intervalo: null,        // Refer√™ncia para o timer do jogo

    // M√©todo para inicializar o jogo
    iniciar: function() {
        // Pega o canvas que j√° existe no HTML
        this.canvas = document.getElementById('gameCanvas');
        
        // Inicia o loop principal do jogo
        // setInterval executa uma fun√ß√£o repetidamente a cada X milissegundos
        this.intervalo = setInterval(atualizarJogo, 1000/FPS);
        
        console.log("üéÆ Jogo iniciado! Canvas:", this.canvas.width + "x" + this.canvas.height);
    },

    // M√©todo para limpar a tela (apagar tudo)
    limpar: function() {
        const contexto = this.canvas.getContext("2d");
        contexto.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
};

// ===== FUN√á√ÉO PRINCIPAL DO JOGO =====
function iniciarJogo() {
    console.log("üöÄ Iniciando o jogo...");
    
    // Cria o quadrado vermelho
    // Par√¢metros: largura, altura, cor, posi√ß√£o X, posi√ß√£o Y
    meuQuadrado = new QuadradoJogavel(30, 30, "red", 10, 120);
    
    // Inicia a √°rea do jogo
    areaDoJogo.iniciar();
    
    console.log("‚úÖ Jogo iniciado com sucesso!");
}

// ===== LOOP PRINCIPAL DO JOGO =====
// Esta fun√ß√£o √© chamada 50 vezes por segundo para criar a anima√ß√£o
function atualizarJogo() {
    // 1. Limpa a tela (apaga o quadrado na posi√ß√£o anterior)
    areaDoJogo.limpar();
    
    // 2. Calcula a nova posi√ß√£o do quadrado
    meuQuadrado.mover();
    
    // 3. Desenha o quadrado na nova posi√ß√£o
    meuQuadrado.desenhar();
}

// ===== FUN√á√ïES DE CONTROLE (MOVIMENTO) =====
function moverParaCima() {
    meuQuadrado.velocidadeY = -VELOCIDADE;  // Velocidade negativa = sobe
    meuQuadrado.velocidadeX = 0;            // Para o movimento horizontal
    console.log("‚¨ÜÔ∏è Movendo para cima");
}

function moverParaBaixo() {
    meuQuadrado.velocidadeY = VELOCIDADE;   // Velocidade positiva = desce
    meuQuadrado.velocidadeX = 0;            // Para o movimento horizontal
    console.log("‚¨áÔ∏è Movendo para baixo");
}

function moverParaEsquerda() {
    meuQuadrado.velocidadeX = -VELOCIDADE;  // Velocidade negativa = esquerda
    meuQuadrado.velocidadeY = 0;            // Para o movimento vertical
    console.log("‚¨ÖÔ∏è Movendo para esquerda");
}

function moverParaDireita() {
    meuQuadrado.velocidadeX = VELOCIDADE;   // Velocidade positiva = direita
    meuQuadrado.velocidadeY = 0;            // Para o movimento vertical
    console.log("‚û°Ô∏è Movendo para direita");
}

function pararMovimento() {
    meuQuadrado.velocidadeX = 0;            // Para movimento horizontal
    meuQuadrado.velocidadeY = 0;            // Para movimento vertical
    console.log("‚èπÔ∏è Movimento parado");
}

// ===== INICIAR O JOGO QUANDO A P√ÅGINA CARREGAR =====
window.onload = function() {
    console.log("üìÑ P√°gina carregada, iniciando jogo...");
    iniciarJogo();
};