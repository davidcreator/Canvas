// ====== VARI√ÅVEIS GLOBAIS ======
// Estas vari√°veis podem ser acessadas por todas as fun√ß√µes

var jogador;           // Vai guardar nosso quadrado vermelho (jogador)
var obstaculo;         // Vai guardar nosso quadrado azul (obst√°culo)
var areaDoJogo;        // Vai controlar toda a √°rea do jogo
var jogoRodando = false; // Controla se o jogo est√° ativo

// ====== OBJETO QUE CONTROLA A √ÅREA DO JOGO ======
areaDoJogo = {
    // Propriedades (vari√°veis do objeto)
    canvas: null,      // Vai guardar nosso elemento canvas
    contexto: null,    // Vai guardar o contexto 2D para desenhar
    intervalo: null,   // Vai controlar a anima√ß√£o do jogo
    
    // M√©todo para inicializar o jogo
    inicializar: function() {
        console.log("üéØ Iniciando √°rea do jogo...");
        
        // Cria um novo elemento canvas
        this.canvas = document.createElement("canvas");
        
        // Define o tamanho do canvas
        this.canvas.width = 600;   // 600 pixels de largura
        this.canvas.height = 400;  // 400 pixels de altura
        
        // Pega o contexto 2D (usado para desenhar)
        this.contexto = this.canvas.getContext("2d");
        
        // Adiciona o canvas na p√°gina
        document.querySelector('.container').appendChild(this.canvas);
        
        // Inicia o loop de anima√ß√£o (atualiza 50 vezes por segundo)
        this.intervalo = setInterval(atualizarJogo, 20);
        
        console.log("‚úÖ √Årea do jogo criada com sucesso!");
    },
    
    // M√©todo para limpar o canvas a cada frame
    limpar: function() {
        // clearRect limpa uma √°rea retangular do canvas
        // (x, y, largura, altura) - limpa todo o canvas
        this.contexto.clearRect(0, 0, this.canvas.width, this.canvas.height);
    },
    
    // M√©todo para parar o jogo
    parar: function() {
        if (this.intervalo) {
            clearInterval(this.intervalo);
            this.intervalo = null;
        }
        if (this.canvas) {
            this.canvas.remove();
            this.canvas = null;
        }
    }
};

// ====== CONSTRUTOR DE COMPONENTES (PE√áAS DO JOGO) ======
// Esta √© uma "f√°brica" de objetos - cria quadrados coloridos
function Componente(largura, altura, cor, posicaoX, posicaoY) {
    console.log(`üîß Criando componente: ${cor} (${largura}x${altura}) na posi√ß√£o (${posicaoX}, ${posicaoY})`);
    
    // Propriedades do componente
    this.largura = largura;     // Largura do quadrado
    this.altura = altura;       // Altura do quadrado
    this.cor = cor;            // Cor do quadrado
    this.x = posicaoX;         // Posi√ß√£o horizontal (esquerda para direita)
    this.y = posicaoY;         // Posi√ß√£o vertical (cima para baixo)
    
    // M√©todo para desenhar o componente na tela
    this.desenhar = function() {
        // Pega o contexto do canvas
        var ctx = areaDoJogo.contexto;
        
        // Define a cor de preenchimento
        ctx.fillStyle = this.cor;
        
        // Desenha um ret√¢ngulo preenchido
        // fillRect(x, y, largura, altura)
        ctx.fillRect(this.x, this.y, this.largura, this.altura);
    };
    
    // M√©todo para mover o componente (exemplo de movimento simples)
    this.mover = function() {
        // Por enquanto, s√≥ move o jogador para a direita lentamente
        if (this.cor === "red") {
            this.x += 0.5; // Move 0.5 pixels para a direita
            
            // Se sair da tela, volta para o in√≠cio
            if (this.x > areaDoJogo.canvas.width) {
                this.x = -this.largura;
            }
        }
    };
}

// ====== FUN√á√ïES PRINCIPAIS DO JOGO ======

// Fun√ß√£o chamada quando clicamos em "Iniciar Jogo"
function iniciarJogo() {
    console.log("üéÆ Iniciando o jogo...");
    
    // Verifica se o jogo j√° est√° rodando
    if (jogoRodando) {
        console.log("‚ö†Ô∏è O jogo j√° est√° rodando!");
        return;
    }
    
    // Inicializa a √°rea do jogo
    areaDoJogo.inicializar();
    
    // Cria o jogador (quadrado vermelho)
    // Componente(largura, altura, cor, x, y)
    jogador = new Componente(40, 40, "red", 50, 180);
    
    // Cria o obst√°culo (quadrado azul)
    obstaculo = new Componente(60, 60, "blue", 350, 200);
    
    jogoRodando = true;
    console.log("‚úÖ Jogo iniciado com sucesso!");
}

// Fun√ß√£o para parar o jogo
function pararJogo() {
    console.log("‚èπÔ∏è Parando o jogo...");
    
    if (!jogoRodando) {
        console.log("‚ö†Ô∏è O jogo n√£o est√° rodando!");
        return;
    }
    
    areaDoJogo.parar();
    jogoRodando = false;
    
    console.log("‚úÖ Jogo parado!");
}

// ====== LOOP PRINCIPAL DO JOGO ======
// Esta fun√ß√£o √© chamada 50 vezes por segundo (a cada 20ms)
function atualizarJogo() {
    // 1. Limpa a tela
    areaDoJogo.limpar();
    
    // 2. Move os componentes
    if (jogador) jogador.mover();
    if (obstaculo) obstaculo.mover();
    
    // 3. Desenha todos os componentes na nova posi√ß√£o
    if (jogador) jogador.desenhar();
    if (obstaculo) obstaculo.desenhar();
}

// ====== MENSAGENS NO CONSOLE ======
console.log("üìö Script carregado! Pronto para come√ßar.");
console.log("üîç Abra as ferramentas de desenvolvedor (F12) para ver mais detalhes.");
console.log("üí° Dica: Clique em 'Iniciar Jogo' para ver a magia acontecer!");
