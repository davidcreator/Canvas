/* ==============================================
    VARI√ÅVEIS GLOBAIS - Elementos do Jogo
    ============================================== */

// Vari√°veis para armazenar os objetos do jogo
let jogador;          // Pe√ßa controlada pelo jogador (quadrado vermelho)
let areaDoJogo;       // Objeto que gerencia toda a √°rea do jogo

/* ==============================================
    FUN√á√ÉO PRINCIPAL - Inicia o Jogo
    ============================================== */

function iniciarJogo() {
    console.log("üöÄ Iniciando o jogo...");
    
    // 1. Primeiro criamos a √°rea do jogo
    areaDoJogo = new AreaDoJogo();
    areaDoJogo.inicializar();
    
    // 2. Depois criamos o componente do jogo
    //    Sintaxe: new Componente(largura, altura, cor, posi√ß√£o_x, posi√ß√£o_y)
    jogador = new Componente(30, 30, "#e74c3c", 10, 120);     // Quadrado vermelho
    
    console.log("‚úÖ Jogo iniciado com sucesso!");
}

/* ==============================================
    CLASSE: √ÅREA DO JOGO - Gerencia o Canvas
    ============================================== */

function AreaDoJogo() {
    // Propriedades da √°rea do jogo
    this.canvas = document.getElementById("gameCanvas");
    this.contexto = null;
    this.intervalo = null;
    
    // M√©todo para inicializar a √°rea do jogo
    this.inicializar = function() {
        console.log("üé® Configurando o canvas...");
        
        // Define o tamanho do canvas
        this.canvas.width = 600;   // Largura em pixels
        this.canvas.height = 400;  // Altura em pixels
        
        // Obt√©m o contexto 2D para desenhar
        this.contexto = this.canvas.getContext("2d");
        
        // Inicia o loop principal do jogo (atualiza 50 vezes por segundo)
        this.intervalo = setInterval(atualizarJogo, 20); // 20ms = 50 FPS
        
        console.log("‚úÖ Canvas configurado: " + this.canvas.width + "x" + this.canvas.height);
    };
    
    // M√©todo para limpar a tela
    this.limparTela = function() {
        // Limpa toda a √°rea do canvas
        this.contexto.clearRect(0, 0, this.canvas.width, this.canvas.height);
    };
}

/* ==============================================
    CLASSE: COMPONENTE - Elementos do Jogo
============================================== */

function Componente(largura, altura, cor, posicaoX, posicaoY) {
    // Propriedades do componente
    this.largura = largura;      // Largura do componente
    this.altura = altura;        // Altura do componente
    this.cor = cor;             // Cor do componente
    this.x = posicaoX;          // Posi√ß√£o horizontal
    this.y = posicaoY;          // Posi√ß√£o vertical
    
    // M√©todo para desenhar o componente na tela
    this.desenhar = function() {
        // Obt√©m o contexto do canvas
        let ctx = areaDoJogo.contexto;
        
        // Define a cor de preenchimento
        ctx.fillStyle = this.cor;
        
        // Desenha o ret√¢ngulo na posi√ß√£o especificada
        ctx.fillRect(this.x, this.y, this.largura, this.altura);
        
        // Adiciona uma borda preta para melhor visualiza√ß√£o
        ctx.strokeStyle = "#2c3e50";
        ctx.lineWidth = 2;
        ctx.strokeRect(this.x, this.y, this.largura, this.altura);
    };
    
    // M√©todo para atualizar o componente (aqui podemos adicionar movimento futuramente)
    this.atualizar = function() {
        // Por enquanto, apenas desenha o componente
        this.desenhar();
        
        // DICA PARA PROFESSORES: Aqui voc√™s podem adicionar:
        // - Movimento autom√°tico: this.x += velocidade;
        // - Detec√ß√£o de colis√£o
        // - Anima√ß√µes
    };
}

/* ==============================================
    LOOP PRINCIPAL - Atualiza o Jogo Constantemente
============================================== */

function atualizarJogo() {
    // 1. Limpa a tela (remove o frame anterior)
    areaDoJogo.limparTela();
    
    // 2. Atualiza e desenha o componente
    jogador.atualizar();      // Desenha o jogador
    
    // DICA: Aqui voc√™ pode adicionar mais l√≥gica do jogo:
    // - Verificar colis√µes
    // - Atualizar pontua√ß√£o
    // - Verificar condi√ß√µes de vit√≥ria/derrota
}

/* ==============================================
    INICIALIZA√á√ÉO - Executa quando a p√°gina carrega
============================================== */

// Aguarda a p√°gina carregar completamente antes de iniciar o jogo
window.addEventListener('load', function() {
    console.log("üìÑ P√°gina carregada!");
    iniciarJogo();
});

/* ==============================================
    PR√ìXIMOS PASSOS PARA EXPANS√ÉO:
    
    1. MOVIMENTO:
        - Adicionar controles de teclado
        - Mover o jogador com as setas
    
    2. F√çSICA:
        - Adicionar gravidade
        - Pulos e colis√µes
    
    3. INTERATIVIDADE:
        - Sistema de pontua√ß√£o
        - M√∫ltiplos n√≠veis
        - Sons e efeitos
    
    4. VISUAL:
        - Sprites (imagens)
        - Anima√ß√µes
        - Part√≠culas
============================================== */