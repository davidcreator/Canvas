/*
===============================================
        JOGO DE FLORESTA - SCRIPT DID√ÅTICO
===============================================

Este script cria um cen√°rio de floresta usando HTML5 Canvas.
Ele desenha um fundo, ch√£o, √°rvores e arbustos para formar
um ambiente natural.

Autor: Professor
Data: 2025
Disciplina: Desenvolvimento de Jogos
*/

// ===============================================
//              1. CONFIGURA√á√ÉO INICIAL
// ===============================================

// Obt√©m o elemento canvas do HTML e seu contexto de renderiza√ß√£o 2D
const canvas = document.getElementById('gameCanvas');
const context = canvas.getContext('2d');

// Configura√ß√µes do jogo
const CANVAS_WIDTH = canvas.width;   // Largura do canvas (800px)
const CANVAS_HEIGHT = canvas.height; // Altura do canvas (600px)
const GROUND_HEIGHT = 520;          // Posi√ß√£o Y onde come√ßa o ch√£o

// ===============================================
//              2. CARREGAMENTO DAS IMAGENS
// ===============================================

console.log('üå≤ Carregando recursos do jogo...');

// === IMAGEM DE FUNDO ===
const backgroundImage = new Image();
backgroundImage.src = 'images/background.jpg';

// === IMAGEM DO CH√ÉO/PLATAFORMA ===
const platformImage = new Image();
platformImage.src = 'images/platform.png';

// === IMAGENS DAS √ÅRVORES ===
// Usando apenas tree4 para manter o c√≥digo mais simples
const treeImage = new Image();
treeImage.src = 'images/tree4.png';

// === IMAGENS DOS ARBUSTOS ===
const bushImages = {
    bush1: new Image(),
    bush2: new Image(),
    bush3: new Image()
};

// Carrega as diferentes varia√ß√µes de arbustos
bushImages.bush1.src = 'images/bush.png';
bushImages.bush2.src = 'images/bush2.png';
bushImages.bush3.src = 'images/bush3.png';

// ===============================================
//              3. FUN√á√ïES DE DESENHO
// ===============================================

/**
 * Desenha o plano de fundo da floresta
 * Esta fun√ß√£o preenche toda a tela com a imagem de fundo
 */
function desenharFundo() {
    context.drawImage(backgroundImage, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
    console.log('üé® Fundo desenhado!');
}

/**
 * Desenha o ch√£o/plataforma do jogo
 * O ch√£o √© posicionado na parte inferior da tela
 */
function desenharChao() {
    const chaoX = 0;                    // Posi√ß√£o X (in√≠cio da tela)
    const chaoY = GROUND_HEIGHT;        // Posi√ß√£o Y (altura do ch√£o)
    const chaoLargura = CANVAS_WIDTH;   // Largura (toda a tela)
    const chaoAltura = 100;             // Altura do ch√£o
    
    context.drawImage(platformImage, chaoX, chaoY, chaoLargura, chaoAltura);
    console.log('üü´ Ch√£o desenhado!');
}

/**
 * Desenha uma √°rvore na posi√ß√£o especificada
 * @param {number} x - Posi√ß√£o horizontal da √°rvore
 * @param {number} y - Posi√ß√£o vertical da √°rvore
 */
function desenharArvore(x, y) {
    const arvoreX = x;          // Posi√ß√£o X da √°rvore
    const arvoreY = y;          // Posi√ß√£o Y da √°rvore
    const arvoreLargura = 100;  // Largura da √°rvore
    const arvoreAltura = 180;   // Altura da √°rvore
    
    context.drawImage(treeImage, arvoreX, arvoreY, arvoreLargura, arvoreAltura);
}

/**
 * Desenha um arbusto na posi√ß√£o especificada
 * @param {number} x - Posi√ß√£o horizontal do arbusto
 * @param {number} y - Posi√ß√£o vertical do arbusto
 * @param {string} tipo - Tipo do arbusto (bush1, bush2 ou bush3)
 */
function desenharArbusto(x, y, tipo = 'bush1') {
    const arbustoX = x;         // Posi√ß√£o X do arbusto
    const arbustoY = y;         // Posi√ß√£o Y do arbusto
    const arbustoLargura = 44;  // Largura do arbusto
    const arbustoAltura = 24;   // Altura do arbusto
    
    // Seleciona a imagem do arbusto baseada no tipo
    const imagemArbusto = bushImages[tipo];
    
    if (imagemArbusto) {
        context.drawImage(imagemArbusto, arbustoX, arbustoY, arbustoLargura, arbustoAltura);
    }
}

// ===============================================
//              4. POSICIONAMENTO DOS ELEMENTOS
// ===============================================

/**
 * Desenha todas as √°rvores da floresta
 * As √°rvores s√£o posicionadas em diferentes alturas para criar profundidade
 */
function desenharTodasArvores() {
    console.log('üå≥ Desenhando √°rvores...');
    
    // === PRIMEIRA FILEIRA DE √ÅRVORES (mais ao fundo) ===
    const arvoresFileira1 = [
        { x: 0, y: 345 },    // √Årvore na posi√ß√£o 0
        { x: 100, y: 345 },  // √Årvore na posi√ß√£o 100
        { x: 200, y: 345 },  // √Årvore na posi√ß√£o 200
        { x: 300, y: 315 },  // √Årvore um pouco mais alta (efeito de profundidade)
        { x: 400, y: 345 },  // √Årvore na posi√ß√£o 400
        { x: 500, y: 345 },  // √Årvore na posi√ß√£o 500
        { x: 600, y: 315 },  // √Årvore um pouco mais alta
        { x: 700, y: 345 }   // √Årvore na posi√ß√£o 700
    ];
    
    // Desenha cada √°rvore da primeira fileira
    arvoresFileira1.forEach(arvore => {
        desenharArvore(arvore.x, arvore.y);
    });
    
    // === SEGUNDA FILEIRA DE √ÅRVORES (mais √† frente) ===
    const arvoresFileira2 = [
        { x: 50, y: 345 },   // √Årvore entre as √°rvores da primeira fileira
        { x: 150, y: 345 },  // Cria um efeito de densidade na floresta
        { x: 250, y: 345 },
        { x: 350, y: 315 },  // Varia√ß√£o na altura
        { x: 450, y: 345 },
        { x: 550, y: 345 },
        { x: 650, y: 315 }
    ];
    
    // Desenha cada √°rvore da segunda fileira
    arvoresFileira2.forEach(arvore => {
        desenharArvore(arvore.x, arvore.y);
    });
}

/**
 * Desenha todos os arbustos da floresta
 * Os arbustos s√£o espalhados pelo ch√£o para criar um ambiente mais natural
 */
function desenharTodosArbustos() {
    console.log('üåø Desenhando arbustos...');
    
    // === ARBUSTOS ESPALHADOS PELO CH√ÉO ===
    const arbustos = [
        // Arbustos usando diferentes tipos para variedade visual
        { x: 0, y: 502, tipo: 'bush1' },
        { x: 40, y: 502, tipo: 'bush2' },
        { x: 80, y: 502, tipo: 'bush1' },
        { x: 120, y: 502, tipo: 'bush3' },
        { x: 160, y: 502, tipo: 'bush2' },
        { x: 200, y: 502, tipo: 'bush1' },
        { x: 240, y: 502, tipo: 'bush2' },
        { x: 280, y: 502, tipo: 'bush3' },
        { x: 320, y: 502, tipo: 'bush2' },
        { x: 360, y: 502, tipo: 'bush1' },
        { x: 400, y: 502, tipo: 'bush2' },
        { x: 440, y: 502, tipo: 'bush3' },
        { x: 480, y: 502, tipo: 'bush2' },
        { x: 520, y: 502, tipo: 'bush1' },
        { x: 560, y: 502, tipo: 'bush2' },
        { x: 600, y: 502, tipo: 'bush3' },
        { x: 640, y: 502, tipo: 'bush2' },
        { x: 680, y: 502, tipo: 'bush1' },
        { x: 720, y: 502, tipo: 'bush2' }
    ];
    
    // Desenha cada arbusto na posi√ß√£o especificada
    arbustos.forEach(arbusto => {
        desenharArbusto(arbusto.x, arbusto.y, arbusto.tipo);
    });
}

// ===============================================
//              5. FUN√á√ÉO PRINCIPAL
// ===============================================

/**
 * Fun√ß√£o principal que desenha todo o cen√°rio
 * Esta fun√ß√£o √© chamada para renderizar todos os elementos da floresta
 */
function desenharCenario() {
    console.log('üéÆ Iniciando desenho do cen√°rio...');
    
    // Limpa o canvas antes de desenhar (boa pr√°tica)
    context.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
    
    // Desenha os elementos em ordem de camadas (fundo para frente)
    desenharFundo();           // 1¬∫ - Fundo da floresta
    desenharTodasArvores();    // 2¬∫ - √Årvores (atr√°s dos arbustos)
    desenharChao();            // 3¬∫ - Ch√£o/plataforma
    desenharTodosArbustos();   // 4¬∫ - Arbustos (na frente das √°rvores)
    
    console.log('‚úÖ Cen√°rio desenhado com sucesso!');
}

// ===============================================
//              6. INICIALIZA√á√ÉO DO JOGO
// ===============================================

/**
 * Fun√ß√£o executada quando a p√°gina termina de carregar
 * Aguarda todas as imagens serem carregadas antes de desenhar
 */
window.onload = function() {
    console.log('üìö P√°gina carregada! Iniciando jogo de floresta...');
    console.log('üìä Dimens√µes do canvas:', CANVAS_WIDTH, 'x', CANVAS_HEIGHT);
    
    // Desenha o cen√°rio inicial
    desenharCenario();
    
    console.log('üéØ Jogo pronto para uso!');
};

// ===============================================
//              7. INFORMA√á√ïES ADICIONAIS
// ===============================================

/*
üìù EXPLICA√á√ïES PARA OS ALUNOS:

1. CANVAS: √â como uma "tela de pintura" digital onde desenhamos os elementos do jogo.

2. CONTEXT: √â o "pincel" que usamos para desenhar no canvas.

3. IMAGENS: S√£o carregadas na mem√≥ria antes de serem desenhadas na tela.

4. COORDENADAS: 
   - X = horizontal (0 = esquerda, 800 = direita)
   - Y = vertical (0 = topo, 600 = fundo)

5. ORDEM DE DESENHO: √â importante desenhar na ordem correta:
   - Fundo primeiro
   - Elementos de tr√°s para frente
   - Elementos da frente por √∫ltimo

6. FUN√á√ïES: Dividimos o c√≥digo em fun√ß√µes para:
   - Organizar melhor o c√≥digo
   - Reutilizar funcionalidades
   - Facilitar manuten√ß√£o e entendimento

üéØ ATIVIDADES SUGERIDAS:
- Experimente mudar as posi√ß√µes das √°rvores
- Adicione mais tipos de arbustos
- Modifique as cores ou tamanhos
- Crie anima√ß√µes simples
*/