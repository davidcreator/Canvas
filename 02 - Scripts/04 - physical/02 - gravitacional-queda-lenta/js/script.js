/* =============================================== --*/
/*--            C√ìDIGO JAVASCRIPT                  --*/
/* =============================================== --*/
// ============================================
//        1. VARI√ÅVEIS GLOBAIS DO JOGO
// ============================================

var meuObjetoCaindo;        // O quadrado vermelho que cai
var tipoGravidade = "luna"; // Tipo de gravidade (lunar ou terrestre)
var gameRunning = false;    // Controla se o jogo est√° rodando

// ============================================
//        2. OBJETO PARA GERENCIAR O CANVAS
// ============================================

var areaDoJogo = {
    // Cria o elemento canvas
    canvas: document.createElement("canvas"),
    
    // Fun√ß√£o para inicializar o canvas
    start: function() {
        // Define o tamanho do canvas
        this.canvas.width = 600;
        this.canvas.height = 400;
        
        // Obt√©m o contexto 2D para desenhar
        this.context = this.canvas.getContext("2d");
        
        // Adiciona o canvas √† p√°gina
        document.body.appendChild(this.canvas);
        
        // Inicia o loop do jogo (atualiza a cada 20ms = 50 FPS)
        this.interval = setInterval(atualizarJogo, 20);
    },
    
    // Fun√ß√£o para parar o jogo
    stop: function() {
        clearInterval(this.interval);
        gameRunning = false;
    },
    
    // Fun√ß√£o para limpar a tela
    clear: function() {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
};

// ============================================
//        3. CONSTRUTOR DE OBJETOS DO JOGO
// ============================================

function ObjetoDoJogo(largura, altura, cor, posicaoX, posicaoY) {
    // Propriedades f√≠sicas do objeto
    this.largura = largura;
    this.altura = altura;
    this.cor = cor;
    this.x = posicaoX;          // Posi√ß√£o horizontal
    this.y = posicaoY;          // Posi√ß√£o vertical
    
    // Propriedades de movimento
    this.velocidadeX = 0;       // Velocidade horizontal
    this.velocidadeY = 0;       // Velocidade vertical
    this.velocidadeGravidade = 0; // Velocidade acumulada pela gravidade
    
    // Configura√ß√µes de gravidade
    this.gravidadeLunar = 0.08;     // Gravidade da Lua
    this.gravidadeTerrestre = 0.5;   // Gravidade da Terra
    
    // Fun√ß√£o para desenhar o objeto na tela
    this.desenhar = function() {
        var ctx = areaDoJogo.context;
        ctx.fillStyle = this.cor;
        ctx.fillRect(this.x, this.y, this.largura, this.altura);
        
        // Desenha informa√ß√µes sobre o objeto
        ctx.fillStyle = "black";
        ctx.font = "12px Arial";
        ctx.fillText("Objeto em queda livre", this.x - 20, this.y - 10);
    };
    
    // Fun√ß√£o para calcular nova posi√ß√£o do objeto
    this.calcularNovaPosicao = function() {
        // Escolhe o tipo de gravidade
        var gravidade = (tipoGravidade === "luna") ? 
            this.gravidadeLunar : this.gravidadeTerrestre;
        
        // Aplica a gravidade (acelera a queda)
        this.velocidadeGravidade += gravidade;
        
        // Atualiza a posi√ß√£o
        this.x += this.velocidadeX;
        this.y += this.velocidadeY + this.velocidadeGravidade;
        
        // Verifica se bateu no ch√£o
        this.verificarColisaoComChao();
        
        // Atualiza informa√ß√µes na tela
        this.atualizarInformacoes();
    };
    
    // Fun√ß√£o para verificar se o objeto bateu no ch√£o
    this.verificarColisaoComChao = function() {
        var alturaDoChao = areaDoJogo.canvas.height - this.altura;
        
        if (this.y >= alturaDoChao) {
            this.y = alturaDoChao;           // Para no ch√£o
            this.velocidadeGravidade = 0;    // Para a velocidade
        }
    };
    
    // Fun√ß√£o para atualizar as informa√ß√µes mostradas
    this.atualizarInformacoes = function() {
        document.getElementById("positionInfo").textContent = 
            `Posi√ß√£o do objeto: x=${Math.round(this.x)}, y=${Math.round(this.y)}`;
        
        document.getElementById("speedInfo").textContent = 
            `Velocidade de queda: ${Math.round(this.velocidadeGravidade * 100) / 100}`;
    };
}

// ============================================
//        4. FUN√á√ïES PRINCIPAIS DO JOGO
// ============================================

// Fun√ß√£o para iniciar o jogo
function startGame() {
    if (!gameRunning) {
        // Cria o objeto que vai cair (quadrado vermelho)
        meuObjetoCaindo = new ObjetoDoJogo(40, 40, "red", 80, 75);
        
        // Inicia a √°rea do jogo
        areaDoJogo.start();
        gameRunning = true;
        
        console.log("üéÆ Jogo iniciado! Observe a queda do objeto.");
    }
}

// Fun√ß√£o para reiniciar o jogo
function resetGame() {
    if (gameRunning) {
        areaDoJogo.stop();
        
        // Remove o canvas antigo se existir
        var oldCanvas = document.querySelector("canvas");
        if (oldCanvas) {
            oldCanvas.remove();
        }
    }
    
    // Reinicia o jogo
    startGame();
    console.log("üîÑ Jogo reiniciado!");
}

// Fun√ß√£o para alternar entre gravidade lunar e terrestre
function toggleGravity() {
    if (tipoGravidade === "luna") {
        tipoGravidade = "terrestre";
        document.getElementById("gravityInfo").textContent = 
            "Gravidade atual: Terra (gravidade normal)";
        console.log("üåç Mudou para gravidade terrestre!");
    } else {
        tipoGravidade = "luna";
        document.getElementById("gravityInfo").textContent = 
            "Gravidade atual: Lua (1/6 da gravidade terrestre)";
        console.log("üåô Mudou para gravidade lunar!");
    }
    
    // Reinicia para aplicar a nova gravidade
    resetGame();
}

// Fun√ß√£o que atualiza o jogo continuamente
function atualizarJogo() {
    // Limpa a tela
    areaDoJogo.clear();
    
    // Desenha o fundo com informa√ß√µes
    desenharFundo();
    
    // Atualiza e desenha o objeto
    meuObjetoCaindo.calcularNovaPosicao();
    meuObjetoCaindo.desenhar();
}

// Fun√ß√£o para desenhar informa√ß√µes no fundo
function desenharFundo() {
    var ctx = areaDoJogo.context;
    
    // Desenha linha do ch√£o
    ctx.strokeStyle = "#2c3e50";
    ctx.lineWidth = 3;
    ctx.beginPath();
    ctx.moveTo(0, areaDoJogo.canvas.height - 1);
    ctx.lineTo(areaDoJogo.canvas.width, areaDoJogo.canvas.height - 1);
    ctx.stroke();
    
    // Adiciona texto informativo
    ctx.fillStyle = "#7f8c8d";
    ctx.font = "14px Arial";
    ctx.fillText("Simula√ß√£o de Gravidade - Observe como o objeto acelera!", 10, 25);
    ctx.fillText(`Tipo: ${tipoGravidade === "luna" ? "Gravidade Lunar" : "Gravidade Terrestre"}`, 10, 45);
}

// ============================================
//        5. EXPLICA√á√ïES PARA OS ALUNOS
// ============================================

console.log(`
üìö EXPLICA√á√ÉO DO C√ìDIGO PARA ALUNOS:

1. CANVAS: √â como uma "tela" onde desenhamos os objetos
2. GRAVIDADE: For√ßa que puxa objetos para baixo
3. VELOCIDADE: Qu√£o r√°pido o objeto se move
4. LOOP DO JOGO: Atualiza a tela 50 vezes por segundo
5. COLIS√ÉO: Detecta quando o objeto toca o ch√£o

üî¨ CONCEITOS DE F√çSICA:
- Na Lua: gravidade √© 1/6 da Terra (objetos caem mais devagar)
- Na Terra: gravidade normal (objetos caem mais r√°pido)
- Acelera√ß√£o: velocidade aumenta com o tempo devido √† gravidade

üí° DESAFIOS PARA PRATICAR:
1. Mude a cor do objeto
2. Adicione mais objetos
3. Crie diferentes tipos de gravidade
4. Adicione som quando o objeto bate no ch√£o
`);